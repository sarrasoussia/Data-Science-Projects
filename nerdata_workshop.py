# -*- coding: utf-8 -*-
"""nerdata workshop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gj9wZcj3aNMQJhI9W-dTvxpL2Xp7VQqY
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

from scipy.stats import norm
import seaborn as sns

# %matplotlib inline

food = pd.read_csv ('food_consumption.csv',sep=",")

food.info()

food.head(10)

"""par defaut retour de 5 lignes pour .head() et .tail()

"""

food.tail()

food.describe()

"""mean median mode"""

food.isnull().sum()

belgium_consumption=food[food["country"]=="Belgium"]
usa_consumption=food[food["country"]=="USA"]

usa_consumption

belgium_consumption

np.mean(belgium_consumption["consumption"])

np.mean(usa_consumption["consumption"])

np.median(usa_consumption["consumption"])

np.median(belgium_consumption["consumption"])

usa_consumption['consumption'].agg([np.mean,np.median])

rice_consumption=food[food["food_category"]=="rice"]
rice_consumption['co2_emission'].agg([np.mean,np.median])
rice_consumption["co2_emission"].hist()
plt.show()

"""3 commun quartiles

"""

np.quantile(food['co2_emission'],[0.25,0.5,0.75])

"""variance and standard deviation(=ecart type =racine de la variance)"""

food[food['food_category']=='beef']['co2_emission'].agg([np.var,np.std])

"""Q3-Q1=IQ Range(IQR)

Outlier if
less than Q1-1.5IQR or greater than Q3+1.5IQR
"""

em_by_country=food.groupby('country')['co2_emission'].sum()
q1=np.quantile(em_by_country, 0.25)
q3=np.quantile(em_by_country, 0.75)
iqr=q3-q1
lower=q1-1.5*iqr
upper=q3+1.5*iqr
outlier=em_by_country[(em_by_country<lower) | (em_by_country>upper)]
plt.boxplot([em_by_country])
plt.show()
outlier

"""statique inferentielle

"""

amir=pd.read_csv('amir_deals.csv')
amir.head()

# amir['amount'].hist()
sns.distplot(x=amir['amount'])
plt.show()

amir['amount'].describe()

norm.cdf(8000,5000,2000)

"""cdf proba mtaa haja asgher ml value
norm.cdf(value,mean,std)
"""

norm.ppf(0.25,5000,2000)

"""ppf is the inverse of cdf"""